sed 's/unix/linux/' geekfile.txt
s is susbstitution operation

1. The caret (^) matches the beginning of the line.
2. The dollar sign ($) matches the end of the line.
3. The asterisk (*) matches zero or more occurrences of the previous character.
4. The plus (+) matches one or more occurrence(s) of the previous character.
5. The question mark (?) matches zero or one occurrence of the previous character.
6. The dot (.) matches exactly one character.

sed 's/unix/linux/' geekfile.txt
By default, the sed command replaces the first occurrence of the pattern in each line and it won’t replace the second, third…occurrence in the line.

sed 's/unix/linux/2' geekfile.txt
replace 2nd unix with linux

$sed 's/unix/linux/g' geekfile.txt
replace all unix with linux

$sed 's/unix/linux/g' geekfile.txt
replace every 3rd unix with linux

$sed '3 s/unix/linux/' geekfile.txt
replacing in specific line number

$sed 's/unix/linux/p' geekfile.txt
replace duplicate unix with linux

$sed -n 's/unix/linux/p' geekfile.txt
Printing only the replaced lines 

$sed '1,3 s/unix/linux/' geekfile.txt
Replacing string on a range of lines

$sed '2,$ s/unix/linux/' geekfile.txt
$ indicates the last line in the file.So the sed command replaces the text from second line to last line in the file.
========x===========x============x=============x============
Deleting lines from a particular file:

1. To Delete a particular line say n in this example
$ sed 'nd' filename.txt

2. To Delete a last line
$ sed '$d' filename.txt

3. To Delete line from range x to y
$ sed '3,6d' filename.txt

4. To Delete from nth to last line
$ sed '12,$d' filename.txt

5. To Delete pattern matching line
$ sed '/abc/d' filename.txt

